[gd_scene load_steps=32 format=3 uid="uid://dkg3jpc8sxh7k"]

[ext_resource type="Texture2D" uid="uid://21jf2c6i1787" path="res://GameFiles/assets/brackeys_platformer_assets/sprites/knight.png" id="2_i41qs"]
[ext_resource type="Texture2D" uid="uid://ccpeipmr8o0g8" path="res://GameFiles/assets/brackeys_platformer_assets/sprites/knight_power.png" id="2_lar2y"]

[sub_resource type="GDScript" id="GDScript_0lx72"]
resource_name = "player.gd"
script/source = "extends CharacterBody2D

const SPEED = 300.0
const POWER_SPEED = 300.0
const JUMP_VELOCITY = -300.0

@onready var CoyoteTimer: Timer = $CoyoteTimer
var coyote_time_activated: bool = false

# Animaciones
@onready var states_machine_normal: AnimationTree = $SpriteNormal/AnimationTree
@onready var states_machine_power: AnimationTree = $SpritePower/AnimationTree
@onready var sprite_normal: Sprite2D = $SpriteNormal
@onready var sprite_power: Sprite2D = $SpritePower

var power_active: bool = false
var is_dying: bool = false

var special_tilemap: TileMapLayer

var spawn_point: Vector2 = Vector2.ZERO

const GROUND_LAYER: int = 1
const SPECIAL_LAYER: int = 2


# Cine 
var can_move: bool = true


func _ready() -> void:
	
	# Buscar el TileMapLayer especial en la escena
	special_tilemap = get_tree().get_first_node_in_group(\"special_tiles\")
	if not special_tilemap:
		push_warning(\"No se encontrÃ³ el TileMapLayer especial con grupo 'special_tiles'\")
		
		
	sprite_normal.visible = true
	sprite_power.visible = false
	states_machine_normal.active = true
	states_machine_power.active = false
	spawn_point = global_position
	states_machine_normal[\"parameters/playback\"].start(\"Idle\")
	states_machine_power[\"parameters/playback\"].start(\"Idle\")

func sm_idle(is_active: bool, is_power: bool = false) -> void:
	var sm = states_machine_power if is_power else states_machine_normal
	sm[\"parameters/conditions/idle\"] = is_active
	sm[\"parameters/conditions/run\"] = not is_active

func sm_run(is_active: bool, is_power: bool = false) -> void:
	var sm = states_machine_power if is_power else states_machine_normal
	sm[\"parameters/conditions/run\"] = is_active
	sm[\"parameters/conditions/idle\"] = not is_active

func sm_roll(is_active: bool, is_power: bool = false) -> void:
	var sm = states_machine_power if is_power else states_machine_normal
	sm[\"parameters/conditions/roll\"] = is_active

func sm_hit(is_active: bool, is_power: bool = false) -> void:
	#var sm = states_machine_power if is_power else states_machine_normal
	#sm[\"parameters/conditions/hit\"] = is_active
	return

func sm_death(is_active: bool, is_power: bool = false) -> void:
	#var sm = states_machine_power if is_power else states_machine_normal
	#sm[\"parameters/conditions/death\"] = is_active
	return

func die() -> void:
	if is_dying: return
	is_dying = true
	sm_hit(true, power_active)
	await get_tree().create_timer(0.1).timeout
	sm_hit(false, power_active)
	sm_death(true, power_active)
	await get_tree().create_timer(0.1).timeout
	sm_death(false, power_active)
	global_position = spawn_point
	velocity = Vector2.ZERO
	power_active = false
	set_collision_mask_value(GROUND_LAYER, true)
	set_collision_mask_value(SPECIAL_LAYER, true)
	sprite_normal.visible = true
	sprite_power.visible = false
	states_machine_normal.active = true
	states_machine_power.active = false
	is_dying = false

func _on_checkpoint_body_entered(body: Node2D) -> void:
	if body == self:
		spawn_point = global_position

func _physics_process(delta: float) -> void:
	if is_dying: return
	
	
	if not can_move:
		velocity.x = move_toward(velocity.x, 0, SPEED)
		move_and_slide()
		return
		
		
	if not is_on_floor():
		velocity += get_gravity() * delta

	if is_on_floor():
		if coyote_time_activated:
			coyote_time_activated = false
			CoyoteTimer.stop()
	else:
		if not coyote_time_activated:
			CoyoteTimer.start()
			coyote_time_activated = true

	if Input.is_action_just_pressed(\"ui_accept\") and (not CoyoteTimer.is_stopped() or is_on_floor()):
		velocity.y = JUMP_VELOCITY
		CoyoteTimer.stop()
		coyote_time_activated = true

	if Input.is_action_just_pressed(\"active_power\"):
		power_active = not power_active
		set_collision_mask_value(GROUND_LAYER, not power_active)
		set_collision_mask_value(SPECIAL_LAYER, true)
		sprite_normal.visible = not power_active
		sprite_power.visible = power_active
		states_machine_normal.active = not power_active
		states_machine_power.active = power_active

	if Input.is_action_just_pressed(\"respawn\"):
		die()

	var is_moving_left = Input.is_action_pressed(\"ui_left\")
	var is_moving_right = Input.is_action_pressed(\"ui_right\")
	var current_speed = POWER_SPEED if power_active else SPEED
	var current_sprite = sprite_power if power_active else sprite_normal

	if is_moving_left:
		velocity.x = -current_speed
		current_sprite.scale.x = -1
		sm_run(true, power_active)
	elif is_moving_right:
		velocity.x = current_speed
		current_sprite.scale.x = 1
		sm_run(true, power_active)
	else:
		velocity.x = move_toward(velocity.x, 0, current_speed)
		sm_idle(true, power_active)

	move_and_slide()

	for i in get_slide_collision_count():
		var collision = get_slide_collision(i)
		var collider = collision.get_collider()
		if collider == special_tilemap:
			var collision_pos = collision.get_position() - collider.global_position
			var tile_coord = collider.local_to_map(collision_pos)
			var tile_data = collider.get_cell_tile_data(tile_coord)
			if tile_data and tile_data.get_custom_data(\"Block\") == 66:
				die()
				break
"

[sub_resource type="CapsuleShape2D" id="CapsuleShape2D_rbwyp"]
radius = 7.0
height = 16.0

[sub_resource type="Animation" id="Animation_4ddha"]
resource_name = "Death"
length = 0.5
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0.1, 0.2, 0.3, 0.4),
"transitions": PackedFloat32Array(1, 1, 1, 1),
"update": 1,
"values": [56, 57, 58, 59]
}

[sub_resource type="Animation" id="Animation_it8h5"]
resource_name = "Hit"
length = 0.5
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0.1, 0.202273, 0.300344, 0.400868),
"transitions": PackedFloat32Array(1, 1, 1, 1),
"update": 1,
"values": [48, 49, 50, 51]
}

[sub_resource type="Animation" id="Animation_0lx72"]
resource_name = "Idle"
length = 0.8
loop_mode = 1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0.1, 0.3, 0.5, 0.7),
"transitions": PackedFloat32Array(1, 1, 1, 1),
"update": 1,
"values": [0, 1, 2, 3]
}

[sub_resource type="Animation" id="Animation_lar2y"]
length = 0.001

[sub_resource type="Animation" id="Animation_jaobi"]
resource_name = "Roll"
length = 0.8
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.1, 0.201047, 0.300344, 0.400868, 0.500868, 0.601915, 0.701212),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1),
"update": 1,
"values": [40, 41, 42, 43, 44, 45, 46, 47]
}

[sub_resource type="Animation" id="Animation_i41qs"]
resource_name = "Run"
length = 1.6
loop_mode = 1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.00267, 1.10267, 1.20534, 1.30534, 1.40551, 1.50534),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 1,
"values": [16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31]
}

[sub_resource type="Animation" id="Animation_7b0ub"]
resource_name = "jump"
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [16]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_i41qs"]
_data = {
&"Death": SubResource("Animation_4ddha"),
&"Hit": SubResource("Animation_it8h5"),
&"Idle": SubResource("Animation_0lx72"),
&"RESET": SubResource("Animation_lar2y"),
&"Roll": SubResource("Animation_jaobi"),
&"Run": SubResource("Animation_i41qs"),
&"jump": SubResource("Animation_7b0ub")
}

[sub_resource type="AnimationNodeAnimation" id="AnimationNodeAnimation_0lx72"]
animation = &"Death"

[sub_resource type="AnimationNodeAnimation" id="AnimationNodeAnimation_lar2y"]
animation = &"Hit"

[sub_resource type="AnimationNodeAnimation" id="AnimationNodeAnimation_i41qs"]
animation = &"Idle"

[sub_resource type="AnimationNodeAnimation" id="AnimationNodeAnimation_jaobi"]
animation = &"Roll"

[sub_resource type="AnimationNodeAnimation" id="AnimationNodeAnimation_it8h5"]
animation = &"Run"

[sub_resource type="AnimationNodeStateMachineTransition" id="AnimationNodeStateMachineTransition_4ddha"]
advance_mode = 2
advance_condition = &"idle"

[sub_resource type="AnimationNodeStateMachineTransition" id="AnimationNodeStateMachineTransition_7b0ub"]
advance_mode = 2
advance_condition = &"run"

[sub_resource type="AnimationNodeStateMachineTransition" id="AnimationNodeStateMachineTransition_n152d"]
advance_mode = 2
advance_condition = &"idle"

[sub_resource type="AnimationNodeStateMachineTransition" id="AnimationNodeStateMachineTransition_inc2w"]
advance_mode = 2
advance_condition = &"roll"

[sub_resource type="AnimationNodeStateMachineTransition" id="AnimationNodeStateMachineTransition_2dw6i"]
advance_mode = 2
advance_condition = &"idle"

[sub_resource type="AnimationNodeStateMachineTransition" id="AnimationNodeStateMachineTransition_uhl3m"]
advance_mode = 2
advance_condition = &"hit"

[sub_resource type="AnimationNodeStateMachineTransition" id="AnimationNodeStateMachineTransition_hd4h8"]
advance_mode = 2
advance_condition = &"run"

[sub_resource type="AnimationNodeStateMachineTransition" id="AnimationNodeStateMachineTransition_q5ch7"]
break_loop_at_end = true
advance_mode = 2
advance_condition = &"hit"

[sub_resource type="AnimationNodeStateMachineTransition" id="AnimationNodeStateMachineTransition_hy4jb"]
advance_mode = 2
advance_condition = &"idle"

[sub_resource type="AnimationNodeStateMachineTransition" id="AnimationNodeStateMachineTransition_11s07"]
advance_mode = 2
advance_condition = &"hit"

[sub_resource type="AnimationNodeStateMachineTransition" id="AnimationNodeStateMachineTransition_flwea"]
advance_mode = 2
advance_condition = &"roll"

[sub_resource type="AnimationNodeStateMachineTransition" id="AnimationNodeStateMachineTransition_lar2y"]
break_loop_at_end = true
switch_mode = 2
advance_mode = 2
advance_condition = &"death"

[sub_resource type="AnimationNodeStateMachineTransition" id="AnimationNodeStateMachineTransition_i41qs"]
switch_mode = 2
advance_mode = 2
advance_condition = &"idle"

[sub_resource type="AnimationNodeStateMachine" id="AnimationNodeStateMachine_dlm7w"]
states/Death/node = SubResource("AnimationNodeAnimation_0lx72")
states/Death/position = Vector2(1174, 155)
states/End/position = Vector2(1251, -267)
states/Hit/node = SubResource("AnimationNodeAnimation_lar2y")
states/Hit/position = Vector2(1021, 155)
states/Idle/node = SubResource("AnimationNodeAnimation_i41qs")
states/Idle/position = Vector2(555, 155)
states/Roll/node = SubResource("AnimationNodeAnimation_jaobi")
states/Roll/position = Vector2(761, 326)
states/Run/node = SubResource("AnimationNodeAnimation_it8h5")
states/Run/position = Vector2(761, -4)
states/Start/position = Vector2(441, 155)
transitions = ["Start", "Idle", SubResource("AnimationNodeStateMachineTransition_4ddha"), "Idle", "Run", SubResource("AnimationNodeStateMachineTransition_7b0ub"), "Run", "Idle", SubResource("AnimationNodeStateMachineTransition_n152d"), "Idle", "Roll", SubResource("AnimationNodeStateMachineTransition_inc2w"), "Roll", "Idle", SubResource("AnimationNodeStateMachineTransition_2dw6i"), "Run", "Hit", SubResource("AnimationNodeStateMachineTransition_uhl3m"), "Hit", "Run", SubResource("AnimationNodeStateMachineTransition_hd4h8"), "Idle", "Hit", SubResource("AnimationNodeStateMachineTransition_q5ch7"), "Hit", "Idle", SubResource("AnimationNodeStateMachineTransition_hy4jb"), "Roll", "Hit", SubResource("AnimationNodeStateMachineTransition_11s07"), "Hit", "Roll", SubResource("AnimationNodeStateMachineTransition_flwea"), "Hit", "Death", SubResource("AnimationNodeStateMachineTransition_lar2y"), "Death", "Idle", SubResource("AnimationNodeStateMachineTransition_i41qs")]
graph_offset = Vector2(213.078, 51.3448)

[node name="CharacterBody2D" type="CharacterBody2D" groups=["Player"]]
collision_layer = 3
collision_mask = 13
script = SubResource("GDScript_0lx72")

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
position = Vector2(0, 2)
shape = SubResource("CapsuleShape2D_rbwyp")

[node name="Camera2D" type="Camera2D" parent="."]
zoom = Vector2(2, 2)

[node name="CoyoteTimer" type="Timer" parent="."]
wait_time = 0.15
one_shot = true

[node name="SpriteNormal" type="Sprite2D" parent="."]
position = Vector2(0, -2)
texture = ExtResource("2_i41qs")
hframes = 8
vframes = 8
frame = 1

[node name="AnimationPlayer" type="AnimationPlayer" parent="SpriteNormal"]
libraries = {
&"": SubResource("AnimationLibrary_i41qs")
}

[node name="AnimationTree" type="AnimationTree" parent="SpriteNormal"]
tree_root = SubResource("AnimationNodeStateMachine_dlm7w")
anim_player = NodePath("../AnimationPlayer")
parameters/conditions/death = false
parameters/conditions/hit = false
parameters/conditions/idle = true
parameters/conditions/roll = false
parameters/conditions/run = false

[node name="SpritePower" type="Sprite2D" parent="."]
position = Vector2(0, -2)
texture = ExtResource("2_lar2y")
hframes = 8
vframes = 8
frame = 1

[node name="AnimationPlayer" type="AnimationPlayer" parent="SpritePower"]
libraries = {
&"": SubResource("AnimationLibrary_i41qs")
}

[node name="AnimationTree" type="AnimationTree" parent="SpritePower"]
tree_root = SubResource("AnimationNodeStateMachine_dlm7w")
anim_player = NodePath("../AnimationPlayer")
parameters/conditions/death = false
parameters/conditions/hit = false
parameters/conditions/idle = true
parameters/conditions/roll = false
parameters/conditions/run = false
